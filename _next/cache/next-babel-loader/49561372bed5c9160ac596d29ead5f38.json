{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\myserver\\\\donate.shpp.com-frontend\\\\components\\\\ProgressBar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport colors from '../theme/colors';\nconst styles = {\n  wrapper: {},\n  progressBar: {\n    backgroundImage: `linear-gradient(to right, ${colors.progressGradientStart} 0%, ${colors.progressGradientMiddle} 30%, ${colors.progressGradientEnd} 100%)`,\n    width: '100%',\n    height: '8px',\n    position: 'relative'\n  },\n  progressBarNotFundedPart: {\n    backgroundColor: colors.progressGradientEmpty,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    width: '90%'\n  }\n};\n\nconst ProgressBar = ({\n  amount,\n  funded\n}) => {\n  const notFundedPercentage = funded > amount ? 0 : 100 - 100 * funded / amount;\n  return __jsx(\"div\", {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: styles.progressBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: _objectSpread({}, styles.progressBarNotFundedPart, {\n      width: `${notFundedPercentage}%`\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/xampp/htdocs/myserver/donate.shpp.com-frontend/components/ProgressBar.js"],"names":["colors","styles","wrapper","progressBar","backgroundImage","progressGradientStart","progressGradientMiddle","progressGradientEnd","width","height","position","progressBarNotFundedPart","backgroundColor","progressGradientEmpty","right","top","bottom","ProgressBar","amount","funded","notFundedPercentage"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,EADI;AAGbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EACZ,6BAA4BJ,MAAM,CAACK,qBAAsB,QAAOL,MAAM,CAACM,sBAAuB,SAAQN,MAAM,CAACO,mBAAoB,QAFzH;AAGXC,IAAAA,KAAK,EAAE,MAHI;AAIXC,IAAAA,MAAM,EAAE,KAJG;AAKXC,IAAAA,QAAQ,EAAE;AALC,GAHA;AAUbC,EAAAA,wBAAwB,EAAE;AACxBC,IAAAA,eAAe,EAAEZ,MAAM,CAACa,qBADA;AAExBH,IAAAA,QAAQ,EAAE,UAFc;AAGxBI,IAAAA,KAAK,EAAE,CAHiB;AAIxBC,IAAAA,GAAG,EAAE,CAJmB;AAKxBC,IAAAA,MAAM,EAAE,CALgB;AAMxBR,IAAAA,KAAK,EAAE;AANiB;AAVb,CAAf;;AAoBA,MAAMS,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAC1C,QAAMC,mBAAmB,GAAGD,MAAM,GAAGD,MAAT,GAAkB,CAAlB,GAAsB,MAAQ,MAAMC,MAAP,GAAiBD,MAA1E;AACA,SACE;AAAK,IAAA,KAAK,EAAEjB,MAAM,CAACC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAED,MAAM,CAACE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,oBAAOF,MAAM,CAACU,wBAAd;AAAwCH,MAAAA,KAAK,EAAG,GAAEY,mBAAoB;AAAtE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CATD;;AAWA,eAAeH,WAAf","sourcesContent":["import colors from '../theme/colors';\n\nconst styles = {\n  wrapper: {\n  },\n  progressBar: {\n    backgroundImage:\n      `linear-gradient(to right, ${colors.progressGradientStart} 0%, ${colors.progressGradientMiddle} 30%, ${colors.progressGradientEnd} 100%)`,\n    width: '100%',\n    height: '8px',\n    position: 'relative',\n  },\n  progressBarNotFundedPart: {\n    backgroundColor: colors.progressGradientEmpty,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    width: '90%',\n  },\n};\n\nconst ProgressBar = ({ amount, funded }) => {\n  const notFundedPercentage = funded > amount ? 0 : 100 - ((100 * funded) / amount);\n  return (\n    <div style={styles.wrapper}>\n      <div style={styles.progressBar}>\n        <div style={{ ...styles.progressBarNotFundedPart, width: `${notFundedPercentage}%` }} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}