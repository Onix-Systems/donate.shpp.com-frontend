{"ast":null,"code":"const prefix = false ? 'https://cors-anywhere.herokuapp.com/' : ''; // TODO: Remove when CORS will be fixed\n\nexport const fetchDataPost = async (body, url) => {\n  try {\n    const response = await fetch(`${prefix}${url}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${process.env.AUTH_TOKEN}`\n      },\n      body\n    });\n    return await response.json();\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchDataGet = async url => {\n  try {\n    const response = await fetch(`${prefix}${url}`, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${process.env.AUTH_TOKEN}`\n      }\n    });\n    return await response.json();\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["C:/xampp/htdocs/myserver/donate.shpp.com-frontend/utils/fetchData.js"],"names":["prefix","fetchDataPost","body","url","response","fetch","method","headers","Authorization","process","env","AUTH_TOKEN","json","error","fetchDataGet"],"mappings":"AACA,MAAMA,MAAM,GAAG,QAAkB,sCAAlB,GAA2D,EAA1E,C,CAA8E;;AAE9E,OAAO,MAAMC,aAAa,GAAG,OAAOC,IAAP,EAAaC,GAAb,KAAqB;AAChD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAO,GAAEG,GAAI,EAAjB,EAAoB;AAC9CG,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEPC,QAAAA,aAAa,EAAG,SAAQC,OAAO,CAACC,GAAR,CAAYC,UAAW;AAFxC,OAFqC;AAM9CT,MAAAA;AAN8C,KAApB,CAA5B;AAQA,WAAO,MAAME,QAAQ,CAACQ,IAAT,EAAb;AACD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAG,MAAOX,GAAP,IAAe;AACzC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAO,GAAEG,GAAI,EAAjB,EAAoB;AAC9CI,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEPC,QAAAA,aAAa,EAAG,SAAQC,OAAO,CAACC,GAAR,CAAYC,UAAW;AAFxC;AADqC,KAApB,CAA5B;AAMA,WAAO,MAAMP,QAAQ,CAACQ,IAAT,EAAb;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAZM","sourcesContent":["\nconst prefix = process.browser ? 'https://cors-anywhere.herokuapp.com/' : ''; // TODO: Remove when CORS will be fixed\n\nexport const fetchDataPost = async (body, url) => {\n  try {\n    const response = await fetch(`${prefix}${url}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${process.env.AUTH_TOKEN}`,\n      },\n      body,\n    });\n    return await response.json();\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDataGet = async (url) => {\n  try {\n    const response = await fetch(`${prefix}${url}`, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${process.env.AUTH_TOKEN}`,\n      },\n    });\n    return await response.json();\n  } catch (error) {\n    return error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}