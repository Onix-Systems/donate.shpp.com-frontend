{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\myserver\\\\donate.shpp.com-frontend\\\\layout\\\\admin\\\\HOC\\\\withAuth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Router from 'next/router';\nimport { useEffect, useState } from 'react';\n/**\n * HOC to wrap admin pages with auth component\n */\n\n/* eslint-disable react/jsx-props-no-spreading */\n\nexport default function WithAuth(WrappedComponent) {\n  const ProtectedComponent = props => {\n    const {\n      0: loading,\n      1: setLoading\n    } = useState(false);\n    useEffect(() => {\n      if (!sessionStorage.getItem('token')) {\n        Router.push('/admin/login');\n      } else {\n        setLoading(true);\n      }\n    }, []);\n    return loading && __jsx(WrappedComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }\n    }));\n  };\n\n  ProtectedComponent.getInitialProps = async ctx => {\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps);\n  };\n\n  return ProtectedComponent;\n}","map":{"version":3,"sources":["C:/xampp/htdocs/myserver/donate.shpp.com-frontend/layout/admin/HOC/withAuth.js"],"names":["Router","useEffect","useState","WithAuth","WrappedComponent","ProtectedComponent","props","loading","setLoading","sessionStorage","getItem","push","getInitialProps","ctx","componentProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;;;;AAGA;;AACA,eAAe,SAASC,QAAT,CAAkBC,gBAAlB,EAAoC;AACjD,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,UAAM;AAAA,SAACC,OAAD;AAAA,SAAUC;AAAV,QAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAD,IAAAA,SAAS,CAAC,MAAM;AACd,UAAI,CAACQ,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAL,EAAsC;AACpCV,QAAAA,MAAM,CAACW,IAAP,CAAY,cAAZ;AACD,OAFD,MAEO;AACLH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KANQ,EAMN,EANM,CAAT;AAQA,WAAOD,OAAO,IAAI,MAAC,gBAAD,eAAsBD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;AACD,GAZD;;AAcAD,EAAAA,kBAAkB,CAACO,eAAnB,GAAqC,MAAOC,GAAP,IAAe;AAClD,UAAMC,cAAc,GAAGV,gBAAgB,CAACQ,eAAjB,KAAqC,MAAMR,gBAAgB,CAACQ,eAAjB,CAAiCC,GAAjC,CAA3C,CAAvB;AACA,6BAAYC,cAAZ;AACD,GAHD;;AAKA,SAAOT,kBAAP;AACD","sourcesContent":["import Router from 'next/router';\nimport { useEffect, useState } from 'react';\n\n/**\n * HOC to wrap admin pages with auth component\n */\n/* eslint-disable react/jsx-props-no-spreading */\nexport default function WithAuth(WrappedComponent) {\n  const ProtectedComponent = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n      if (!sessionStorage.getItem('token')) {\n        Router.push('/admin/login');\n      } else {\n        setLoading(true);\n      }\n    }, []);\n\n    return loading && <WrappedComponent {...props} />;\n  };\n\n  ProtectedComponent.getInitialProps = async (ctx) => {\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return { ...componentProps };\n  };\n\n  return ProtectedComponent;\n}\n"]},"metadata":{},"sourceType":"module"}